{"version":3,"sources":["component/arrays.js","component/adder.js","component/class1.js","reportWebVitals.js","component/calculator.js","component/styling.js","component/arraysProject.js","component/calculatorComp.js","index.js"],"names":["Arrays","props","handleInput1","e","setState","name","target","value","handleInput2","Domain","handlePush","temp","state","arr","push","handlePop","pop","handleDelete","index","splice","this","map","single","onClick","placeholder","onChange","React","Component","Adder","handleNum1","num1","handleNum2","num2","handleResult","sum","parseInt","average","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Calculator","handleSum","alert","handleSub","sub","handleMul","mult","handleDiv","div","className","border","Styling","Arrays_Project","handleInput","taskInput","pushTask","tasksArr","handleComplete","handleClc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27faed45.chunk.js","sourcesContent":["import React from 'react';\r\nexport default class Arrays extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arr: [\r\n                {\r\n                    name: \" Sambit \",\r\n                    Domain: \"React JS\"\r\n                },\r\n\r\n                {\r\n                    name: \"Ansukun\",\r\n                    Domain: \"Node JS\"\r\n                },\r\n                {\r\n                    name: \"Ansumun\",\r\n                    Domain: \"Angular JS\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleInput1 = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n\r\n        })\r\n    }\r\n\r\n    handleInput2 = (e) => {\r\n        this.setState({\r\n            Domain: e.target.value,\r\n        })\r\n    }\r\n\r\n    handlePush = () => {\r\n        var temp = this.state.arr;\r\n        temp.push({\r\n            name: this.state.name,\r\n            Domain: this.state.Domain\r\n        })\r\n        this.setState({\r\n            arr: temp,\r\n            name: \"\",\r\n            Domain: \"\"\r\n        })\r\n\r\n    }\r\n\r\n    handlePop = () => {\r\n        var temp = this.state.arr;\r\n        temp.pop();\r\n        this.setState({\r\n            arr: temp\r\n        })\r\n    }\r\n\r\n    handleDelete = (e, index) => {\r\n        var temp=this.state.arr\r\n        temp.splice(index,1)\r\n        this.setState({\r\n            arr:temp\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Staff List</h3>\r\n                {this.state.arr.map((single, index) => {\r\n                    return (\r\n                        <div>\r\n                            {single.name} Working on {single.Domain}<button onClick={(e) => {\r\n                                        this.handleDelete(e, index)\r\n                                    }}>Delete</button>\r\n                                \r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <input placeholder=\"Enter The name\" value={this.state.name} onChange={this.handleInput1} />\r\n                <input placeholder=\"Enter the Domain\" value={this.state.Domain} onChange={this.handleInput2} />\r\n                <button onClick={this.handlePush}>\r\n                    PUSH\r\n                </button>\r\n                <button onClick={this.handlePop}>\r\n                    POP\r\n                </button>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nexport default class Adder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            num1: '',\r\n            num2: '',\r\n            sum: 0,\r\n            average: 0\r\n\r\n        }\r\n    }\r\n\r\n    handleNum1 = (e) => {\r\n        this.setState({\r\n            num1: e.target.value\r\n        })\r\n    }\r\n\r\n    handleNum2 = (e) => {\r\n        this.setState({\r\n            num2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleResult = () => {\r\n        this.setState({\r\n            sum: parseInt(this.state.num1) + parseInt(this.state.num2)\r\n        },\r\n            () => {\r\n                this.setState({\r\n                    average: (parseInt(this.state.num1) + parseInt(this.state.num2)) / 2,\r\n                    num1: '',\r\n                    num2: ''\r\n                })\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <input\r\n                    placeholder=\"enter a number\"\r\n                    value={this.state.num1}\r\n                    onChange={this.handleNum1}\r\n                />\r\n\r\n                <br />\r\n\r\n                <input\r\n                    placeholder=\"enter a number\"\r\n                    value={this.state.num2}\r\n                    onChange={this.handleNum2}\r\n                />\r\n                <br />\r\n\r\n                <button onClick={this.handleResult}>\r\n                    RESULT\r\n                </button>\r\n                <br />\r\n\r\n                SUM={this.state.sum}<br />\r\n                AVERAGE={this.state.average}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nexport default class Class1 extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name:\"Nexstacks\"\r\n        }\r\n\t}\r\n\t\r\n\t handleName = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tname:event.target.value \r\n\t\t});  \r\n\t}\r\n\r\n\thandleClick = () =>{\r\n\t\tthis.setState({\r\n\t\t\tname:\"\"\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<input type=\"text\" value={this.state.name} onChange={this.handleName}  />\r\n\t\t\t\t<br />\r\n\t\t\t\t{this.state.name}\r\n\t\t\t\t<br />\r\n\t\t\t\t<button type=\"text\" onClick={this.handleClick}>\r\n\t\t\t\t\tReset!\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t  )\r\n\t}\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport \"../style/style.css\";\r\nexport default class Calculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            // num1:'',\r\n            // num2:'',\r\n            sum:0,\r\n            div:0,\r\n            sub:0,\r\n            mult:0\r\n        }\r\n    }\r\n\r\n    // handleNum1 = (e) => {\r\n    //     this.setState({\r\n    //         num1:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    // handleNum2 = (e) => {\r\n    //     this.setState({\r\n    //         num2:e.target.value\r\n    //     })\r\n    // }\r\n\r\n    handleSum = (e) =>{\r\n        this.setState({\r\n            sum: parseInt(this.props.num1) + parseInt(this.props.num2),\r\n            num1:'',\r\n            num2:''\r\n        })\r\n        alert(parseInt(this.props.num1) + parseInt(this.props.num2))\r\n\r\n    }\r\n\r\n    \r\n    handleSub = () =>{\r\n        this.setState({\r\n            sub: parseInt(this.props.num1) - parseInt(this.props.num2),\r\n            num1:'',\r\n            num2:'',\r\n        })\r\n        alert(parseInt(this.props.num1) - parseInt(this.props.num2))\r\n\r\n    }\r\n\r\n    handleMul = () =>{\r\n        this.setState({\r\n            mult: parseInt(this.props.num1) * parseInt(this.props.num2),\r\n            num1:'',\r\n            num2:'',\r\n        })\r\n        alert(parseInt(this.props.num1) * parseInt(this.props.num2))\r\n\r\n    }\r\n\r\n    handleDiv = () =>{\r\n        this.setState({\r\n            div: parseInt(this.props.num1) / parseInt(this.props.num2),\r\n            num1:'',\r\n            num2:'',\r\n        })\r\n        alert(parseInt(this.props.num1) / parseInt(this.props.num2))\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n     \r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n                {/* <input className=\"input\"\r\n                    placeholder=\"enter a number\"\r\n                    value={this.state.num1}\r\n                    onChange={this.handleNum1}\r\n                /> \r\n\r\n                <br /> \r\n\r\n                <input className=\"input2\"\r\n                    placeholder=\"enter a number\"\r\n                    value={this.state.num2}\r\n                    onChange={this.handleNum2}\r\n                /> \r\n                <br /> */}\r\n\r\n                <button className=\"btn\" onClick={this.handleSum}>\r\n                    +\r\n                </button> <br /> \r\n                <button className=\"btn\" onClick={this.handleSub}>\r\n                    -\r\n                </button> <br />\r\n\r\n                <button className=\"btn\" onClick={this.handleMul}>\r\n                    X\r\n                </button> <br />\r\n\r\n                <button className=\"btn\" onClick={this.handleDiv}>\r\n                    /\r\n                </button> <br />\r\n                \r\n                <center>\r\n                    <table border=\"3\">\r\n                        <tr>\r\n                            <th>SUMMATION</th>   \r\n                            <th>SUBSTRACTION</th> \r\n                            <th>MULTIPLICATION</th>\r\n                            <th>DIVISION</th>\r\n                        </ tr>\r\n                        <tr>\r\n                            <td>{this.state.sum}</td>\r\n                            <td>{this.state.sub}</td>\r\n                            <td>{this.state.mult}</td>\r\n                            <td>{this.state.div}</td>\r\n\r\n                        </tr>\r\n                    </table > \r\n                </center> \r\n                \r\n                        \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nexport default class Styling extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>\r\n                   <h1>NextStacks</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nexport default class Arrays_Project extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tasksArr: [\"React js\"],\r\n            taskInput: \"\"\r\n\r\n        }\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            taskInput: e.target.value\r\n        })\r\n    }\r\n    pushTask = () => {\r\n        var temp = this.state.tasksArr\r\n        temp.push(this.state.taskInput)\r\n        this.setState({\r\n            tasksArr: temp,\r\n            taskInput: \"\"\r\n        })\r\n    }\r\n    handleComplete = (e, index) => {\r\n        var temp=this.state.tasksArr\r\n        temp.splice(index,1)\r\n        this.setState({\r\n            tasksArr:temp\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Arrays Assignment!!!</h4>\r\n                <input placeholder=\"Enter The Task\" value={this.state.taskInput} onChange={this.handleInput} />\r\n                <button onClick={this.pushTask}>\r\n                    Add Task\r\n               </button>\r\n\r\n                <h2>Tasks to do</h2>\r\n                <div>\r\n                    <ul>\r\n                        {this.state.tasksArr.map((single, index) => {\r\n                            return (\r\n                                <li>\r\n                                    {single}<button onClick={(e) => {\r\n                                        this.handleComplete(e, index)\r\n                                    }}>Completed</button>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Calculator from './calculator'\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            num1: '',\r\n            num2: '',\r\n\r\n        }\r\n    }\r\n\r\n    handleNum1 = (e) => {\r\n        this.setState({\r\n            num1: e.target.value\r\n        })\r\n    }\r\n\r\n    handleNum2 = (e) => {\r\n        this.setState({\r\n            num2: e.target.value\r\n        })\r\n    }\r\n\r\n    handleClc = () =>{\r\n        this.setState({\r\n            num1:'',\r\n            num2:'',\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 >MY CALCULATOR</h1>\r\n                <br />\r\n                <input className=\"input\"\r\n                    placeholder=\"enter a number\"\r\n                    value={this.state.num1}\r\n                    onChange={this.handleNum1}\r\n                />\r\n\r\n                <br />\r\n\r\n                <input className=\"input2\"\r\n                    placeholder=\"enter a number\"\r\n                    value={this.state.num2}\r\n                    onChange={this.handleNum2}\r\n                />\r\n                <br />\r\n\r\n                <Calculator num1={this.state.num1} num2={this.state.num2} />\r\n                <button className=\"btn\" onClick={this.handleClc}>\r\n                    CLEAR\r\n                </button><br /> \r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Arrays from './component/arrays'\nimport Adder from './component/adder'\nimport Class1 from './component/class1';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Calculator from './component/calculator';\nimport Styling from './component/styling';\nimport Arrays_Project from './component/arraysProject';\nimport CalculatorComp from './component/calculatorComp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Class1/> */}\n    <Styling />\n    <Adder/>\n    <Arrays /> \n    <Arrays_Project />\n    <CalculatorComp />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}